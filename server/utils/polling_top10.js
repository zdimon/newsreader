// Generated by CoffeeScript 1.12.4
(function() {
  var download_image, fs, get_top10_from_server, http, log, makeresponse, out, path, request, utils;

  http = require('http');

  fs = require('fs');

  path = require('path');

  utils = require('../utils/utils');

  request = require('request');

  log = require('winston-color');

  log.level = process.env.LOG_LEVEL;

  log.debug("Importing pooling top 10 module");

  makeresponse = function(options, onResult) {
    var dest;
    dest = path.join(global.app_root, global.app_config.data_dir, "top10/" + (utils.getNowDate()) + ".json");
    return fs.stat(dest, function(err, stat) {
      var req;
      if (err !== null) {
        console.log('Requesting....');
        req = http.get(options, function(res) {
          var out;
          out = '';
          res.on('data', function(chunk) {
            return out = out + chunk;
          });
          return res.on('end', function() {
            var jsdata;
            jsdata = JSON.parse(out);
            download_image(jsdata);
            if (parseInt(Object.keys(jsdata.articles).length) > 9) {
              fs.writeFile(dest, out, function(err) {
                if (err) {
                  console.log(err);
                }
                return console.log("The file " + dest + " was saved!");
              });
            }
            return onResult(res.statusCode, out);
          });
        });
        req.on('socket', function(socket) {
          socket.setTimeout(10000);
          return socket.on('timeout', function() {
            return req.abort();
          });
        });
        return req.on('error', function(err) {
          if (err.code === 'ECONNRESET') {
            return console.log('Timeour occurs');
          }
        });
      }
    });
  };

  get_top10_from_server = function(end) {
    var options;
    options = {
      host: global.remote_host,
      path: "/mts/api/top10/" + (utils.getNowDate()) + ".json"
    };
    makeresponse(options, function(code, res) {
      return console.log("Request is compleated with code " + code);
    });
    return end();
  };

  download_image = function(jsdata) {
    var date_dir, i, image_path, j, len, ref, results;
    date_dir = path.join(global.app_root, global.app_config.data_dir, 'top10', 'images', jsdata.date);
    if (!fs.existsSync(date_dir)) {
      log.verbose("debug", "Creating " + date_dir);
      fs.mkdirSync(date_dir);
    }
    ref = jsdata.articles;
    results = [];
    for (j = 0, len = ref.length; j < len; j++) {
      i = ref[j];
      image_path = path.join(date_dir, i.id + ".png");
      log.verbose("debug", i.small_image);
      results.push(request(i.small_image).pipe(fs.createWriteStream(image_path)).on('close', function() {
        return win.log("debug", "saved " + i.small_image);
      }));
    }
    return results;
  };

  out = {
    get_top10_from_server: get_top10_from_server
  };

  module.exports = out;

}).call(this);
