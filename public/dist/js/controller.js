// Generated by CoffeeScript 1.9.3
(function() {
  var init;

  init = function($rootScope) {
    $rootScope.show_forward = false;
    return $rootScope.show_backward = false;
  };

  angular.module('readerApp').controller('indexCtrl', [
    '$scope', 'Top10', '$state', '$rootScope', function($scope, Top10, $state, $rootScope) {
      init($rootScope);
      Top10.get_top10(function(r) {
        return $rootScope.top_list = r;
      });
      return $scope.go = function(id) {
        return $state.go('reader.top_detail', {
          id: id
        });
      };
    }
  ]).controller('topDetailCtrl', [
    '$scope', '$stateParams', '$rootScope', 'Top10', function($scope, $stateParams, $rootScope, Top10) {
      init($rootScope);
      if ($rootScope.top_list) {
        return angular.forEach($rootScope.top_list.articles, function(k, v) {
          if (parseInt(k.id) === parseInt($stateParams.id)) {
            return $scope.article = k;
          }
        });
      } else {
        return Top10.get_top10(function(r) {
          $rootScope.top_list = r;
          return angular.forEach($rootScope.top_list.articles, function(k, v) {
            if (parseInt(k.id) === parseInt($stateParams.id)) {
              return $scope.article = k;
            }
          });
        });
      }
    }
  ]).controller('journalsCtrl', [
    '$scope', '$stateParams', '$rootScope', function($scope, $stateParams, $rootScope) {
      init($rootScope);
      return $scope.journals_list = [1, 2, 3, 4, 5, 6];
    }
  ]).controller('magazinesCtrl', [
    '$scope', '$stateParams', '$rootScope', function($scope, $stateParams, $rootScope) {
      init($rootScope);
      return $scope.items = [
        {
          src: '/images/cover1.png',
          sub: 'This is a <b>subtitle</b>',
          thumb: '/images/high1.jpg'
        }, {
          src: '/images/cover2.png',
          sub: ''
        }, {
          src: '/images/cover1.png',
          thumb: '/images/high1.jpg'
        }
      ];
    }
  ]).controller('readCtrl', [
    '$scope', '$stateParams', '$rootScope', function($scope, $stateParams, $rootScope) {
      init($rootScope);
      return $scope.journals_list = [1, 2, 3, 4];
    }
  ]).controller('catalogCtrl', [
    '$scope', '$stateParams', '$state', '$rootScope', function($scope, $stateParams, $state, $rootScope) {
      init($rootScope);
      return $scope.go = function(id) {
        return $state.go('reader.catalog_detail', {
          id: id
        });
      };
    }
  ]).controller('catalogDetailCtrl', [
    '$scope', '$stateParams', '$state', '$rootScope', 'Catalog', function($scope, $stateParams, $state, $rootScope, Catalog) {
      init($rootScope);
      if ($rootScope.catalog) {
        $scope.catalog = $rootScope.catalog.categories[$stateParams.id];
      } else {
        Catalog.get_catalog(function(rez) {
          $rootScope.catalog = rez;
          return $scope.catalog = $rootScope.catalog.categories[$stateParams.id];
        });
      }
      return $scope.go = function(id) {
        return $state.go('reader.journal_detail', {
          catalog_id: $stateParams.id,
          journal_id: id
        });
      };
    }
  ]).controller('journalDetailCtrl', [
    '$scope', '$stateParams', '$state', '$rootScope', 'Catalog', function($scope, $stateParams, $state, $rootScope, Catalog) {
      init($rootScope);
      if ($rootScope.catalog) {
        $scope.journal = $rootScope.catalog.categories[$stateParams.catalog_id].journals[$stateParams.journal_id];
      } else {
        Catalog.get_catalog(function(rez) {
          $rootScope.catalog = rez;
          return $scope.journal = $rootScope.catalog.categories[$stateParams.catalog_id].journals[$stateParams.journal_id];
        });
      }
      return $scope.go = function(id, txt) {
        if (txt) {
          return $state.go('reader.articles', {
            issue_id: id,
            journal_id: $stateParams.journal_id
          });
        } else {
          return $state.go('reader.issue_detail', {
            issue_id: id,
            journal_id: $stateParams.journal_id
          });
        }
      };
    }
  ]).controller('issueDetailCtrl', [
    '$scope', '$stateParams', '$state', '$rootScope', 'Issue', function($scope, $stateParams, $state, $rootScope, Issue) {
      init($rootScope);
      Issue.get_pages($stateParams.journal_id, $stateParams.issue_id, function(rez) {
        $scope.issue = rez;
        return $scope.pages = rez.pages;
      });
      return $scope.go = function(page_id) {
        return $state.go('reader.page_detail', {
          journal_id: $stateParams.journal_id,
          issue_id: $stateParams.issue_id,
          page_id: page_id
        });
      };
    }
  ]).controller('pageDetailCtrl', [
    '$scope', '$stateParams', '$state', '$rootScope', 'Issue', function($scope, $stateParams, $state, $rootScope, Issue) {
      init($rootScope);
      return Issue.get_pages($stateParams.journal_id, $stateParams.issue_id, function(rez) {
        $scope.issue = rez;
        $scope.pages = rez.pages;
        $scope.page = $scope.pages.pages[$stateParams.page_id];
        $rootScope.show_forward = true;
        $rootScope.show_backward = true;
        $rootScope.go_forward = function() {
          return $state.go('reader.page_detail', {
            journal_id: $stateParams.journal_id,
            issue_id: $stateParams.issue_id,
            page_id: parseInt($stateParams.page_id) + 1
          });
        };
        return $rootScope.go_backward = function() {
          return $state.go('reader.page_detail', {
            journal_id: $stateParams.journal_id,
            issue_id: $stateParams.issue_id,
            page_id: parseInt($stateParams.page_id) - 1
          });
        };
      });
    }
  ]).controller('articlesCtrl', [
    '$scope', '$stateParams', '$state', '$rootScope', 'Articles', function($scope, $stateParams, $state, $rootScope, Articles) {
      init($rootScope);
      Articles.get_articles($stateParams.journal_id, $stateParams.issue_id, function(rez) {
        return $scope.articles = rez.articles;
      });
      return $scope.go = function(article_id) {
        return $state.go('reader.article_detail', {
          journal_id: $stateParams.journal_id,
          issue_id: $stateParams.issue_id,
          article_id: article_id
        });
      };
    }
  ]).controller('articleDetailCtrl', [
    '$scope', '$stateParams', '$state', '$rootScope', 'Articles', function($scope, $stateParams, $state, $rootScope, Articles) {
      init($rootScope);
      return Articles.get_articles($stateParams.journal_id, $stateParams.issue_id, function(rez) {
        $scope.articles = rez.articles;
        $scope.swipLeft = function() {
          return alert('left');
        };
        $scope.swipRight = function() {
          return console.log('right');
        };
        return angular.forEach($scope.articles, function(v, k) {
          if (parseInt(v.id) === parseInt($stateParams.article_id)) {
            $scope.article = v;
            return console.log(v.id);
          }
        });
      });
    }
  ]);

}).call(this);
